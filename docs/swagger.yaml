basePath: /
definitions:
  dto.ErrorResponse:
    properties:
      error:
        type: string
    required:
    - error
    type: object
  dto.MessageResponse:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  models.BiddingStrategy:
    properties:
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      strategy:
        example: Cost Optimize
        type: string
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
    type: object
  models.Billing:
    properties:
      amount:
        example: 900.25
        type: number
      comments:
        example: Something about the invoice...
        type: string
      company:
        $ref: '#/definitions/models.Company'
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      due_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      issued_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      name:
        type: integer
      status:
        description: 'Available options: paid, unpaid, pending'
        example: paid
        type: string
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
    type: object
  models.Campaign:
    properties:
      bidding_strategy:
        type: integer
      biddingStrategy:
        $ref: '#/definitions/models.BiddingStrategy'
      budget:
        example: 1000
        type: integer
      company:
        $ref: '#/definitions/models.Company'
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      keywords:
        items:
          $ref: '#/definitions/models.Keyword'
        type: array
      name:
        example: Primary Monthly
        type: string
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
    type: object
  models.Company:
    properties:
      budget:
        example: 1000
        type: integer
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      domain:
        example: raajpatel.dev
        type: string
      email:
        example: the@raajpatel.dev
        type: string
      id:
        example: 1
        type: integer
      industry:
        $ref: '#/definitions/models.Industry'
      name:
        example: Google LLC
        type: string
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
    type: object
  models.Industry:
    properties:
      Industry:
        example: Health Care
        type: string
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
    type: object
  models.Keyword:
    properties:
      cpc:
        example: 9.25
        type: number
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      keyword:
        example: Dentistry
        type: string
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@adomate.com
    name: Adomate API Support
    url: https://adomate.com/support
  description: Adomate Monolithic API
  title: Adomate API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MessageResponse'
      summary: Show the status of server.
      tags:
      - General
  /billing:
    get:
      consumes:
      - '*/*'
      description: Gets a slice of all bills.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Billing'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all Bills
      tags:
      - Billing
    post:
      consumes:
      - '*/*'
      description: Create a new bill.
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create Bill
      tags:
      - Billing
  /billing/:id:
    delete:
      consumes:
      - '*/*'
      description: Delete a bill.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Delete Bill
      tags:
      - Billing
    get:
      consumes:
      - '*/*'
      description: Gets all information about a single bill.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Billing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Gets a Bill
      tags:
      - Billing
    patch:
      consumes:
      - '*/*'
      description: Update information about a bill.
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Billing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update Bill
      tags:
      - Billing
  /billing/company/:id:
    get:
      consumes:
      - '*/*'
      description: Gets a slice of all the bills for a specific company.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Billing'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all Bills for a Company
      tags:
      - Billing
  /campaign:
    get:
      consumes:
      - '*/*'
      description: Get a slice of all campaigns
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Campaign'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all campaigns
      tags:
      - Campaign
    post:
      consumes:
      - '*/*'
      description: creates a campaign for certain company/user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Campaign'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create add campaign
      tags:
      - Campaign
  /campaign/:id:
    delete:
      consumes:
      - '*/*'
      description: Delete a campaign.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Delete Campaign
      tags:
      - Campaign
    get:
      consumes:
      - '*/*'
      description: Gets all information about specific campaign
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Campaign'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Gets a campaign
      tags:
      - Campaign
  /campaign/company/:id:
    get:
      consumes:
      - '*/*'
      description: get a slice of all campaigns for certain company
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Campaign'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all campaigns for a company
      tags:
      - Campaign
schemes:
- http
- https
swagger: "2.0"
